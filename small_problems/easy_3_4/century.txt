Problem:

Function takes year as input.
Outputs the century of the year.

New centuries begin in years that end with 01.
So, the years 1901-2000 comprise the 20th century.

-st is used with numbers ending in 1 (e.g. 1st, pronounced first)
-nd is used with numbers ending in 2 (e.g. 92nd, pronounced ninety-second)
-rd is used with numbers ending in 3 (e.g. 33rd, pronounced thirty-third)
-As an exception to the above rules, all the "teen" numbers ending with 11, 12 or 13 use -th (e.g. 11th, pronounced eleventh, 112th, pronounced one hundred [and] twelfth)
-th is used for all other numbers (e.g. 9th, pronounced ninth).

Test Cases (Given):

century(2000);        // "20th"
century(2001);        // "21st"
century(1965);        // "20th"
century(256);         // "3rd"
century(5);           // "1st"
century(10103);       // "102nd"
century(1052);        // "11th"
century(1127);        // "12th"
century(11201);       // "113th"

Pseudocode:

Function century

START

1.  SET centuryNumber to Math.floor(year / 100) + 1
2.  IF year is divisible by 100 without remainder
      SET centuryNumber -= 1
3.  RETURN stringified centuryNumber + centurySuffix(centuryNumber)

END

Function centurySuffice

START

1.  SET lastTwo to remainder after dividing by 100
2.  IF lastTwo is 11 12 or 13
      RETURN 'th'
3.  SET lastDigit to remainder after dividing by 10
4.  IF lastDigit is 1
      RETURN 'st'
    ELSE IF lastDigit is 2
      RETURN 'nd'
    ELSE IF lastDigit is 3
      RETURn 'rd'
    ELSE
      RETURN 'th'

END
